/*
Copyright The Space Cloud Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/spacecloud-io/space-cloud/pkg/apis/core/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HSASecretLister helps list HSASecrets.
// All objects returned here must be treated as read-only.
type HSASecretLister interface {
	// List lists all HSASecrets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HSASecret, err error)
	// HSASecrets returns an object that can list and get HSASecrets.
	HSASecrets(namespace string) HSASecretNamespaceLister
	HSASecretListerExpansion
}

// hSASecretLister implements the HSASecretLister interface.
type hSASecretLister struct {
	indexer cache.Indexer
}

// NewHSASecretLister returns a new HSASecretLister.
func NewHSASecretLister(indexer cache.Indexer) HSASecretLister {
	return &hSASecretLister{indexer: indexer}
}

// List lists all HSASecrets in the indexer.
func (s *hSASecretLister) List(selector labels.Selector) (ret []*v1alpha1.HSASecret, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HSASecret))
	})
	return ret, err
}

// HSASecrets returns an object that can list and get HSASecrets.
func (s *hSASecretLister) HSASecrets(namespace string) HSASecretNamespaceLister {
	return hSASecretNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HSASecretNamespaceLister helps list and get HSASecrets.
// All objects returned here must be treated as read-only.
type HSASecretNamespaceLister interface {
	// List lists all HSASecrets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HSASecret, err error)
	// Get retrieves the HSASecret from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HSASecret, error)
	HSASecretNamespaceListerExpansion
}

// hSASecretNamespaceLister implements the HSASecretNamespaceLister
// interface.
type hSASecretNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HSASecrets in the indexer for a given namespace.
func (s hSASecretNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HSASecret, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HSASecret))
	})
	return ret, err
}

// Get retrieves the HSASecret from the indexer for a given namespace and name.
func (s hSASecretNamespaceLister) Get(name string) (*v1alpha1.HSASecret, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hsasecret"), name)
	}
	return obj.(*v1alpha1.HSASecret), nil
}
